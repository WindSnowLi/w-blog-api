<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hiyj.blog.mapper.ArticleMapper">
    <cache type="org.mybatis.caches.redis.RedisCache"/>
    <resultMap id="articleMap" type="com.hiyj.blog.object.Article">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="summary" column="summary"/>
        <result property="content" column="content"/>
        <result property="coverPic" column="coverPic"/>
        <result property="updateTime" column="updateTime"/>
        <result property="createTime" column="createTime"/>
        <result property="status" column="status"/>
        <result property="commentDisabled" column="comment_disabled"/>
        <result property="publishType" column="publish_type"/>
        <collection property="pv" javaType="Integer"
                    select="getArtPV" column="id"/>
        <collection property="labels" javaType="ArrayList" ofType="com.hiyj.blog.object.ArticleLabel"
                    select="getArticleMapLabels" column="id"/>
        <collection property="articleType" ofType="com.hiyj.blog.object.ArticleType"
                    select="getArticleMapType" column="id"/>
    </resultMap>

    <sql id="sort">
        <if test="sort == null or sort == '-id'">
            ORDER BY a.id DESC
        </if>
        <if test="sort == '+id'">
            ORDER BY a.id ASC
        </if>
    </sql>

    <!--    根据文章ID获取文章访问量-->
    <select id="getArtPV" resultType="int">
        SELECT IFNULL(SUM(count), 0)
        FROM pv
        WHERE pv.`type` = 1
          AND pv.target_id = #{articleId}
    </select>
    <!--    根据文章ID获取文章访问量结束-->

    <select id="getArticleCount" parameterType="int" resultType="int">
        select count(*)
        from article
    </select>

    <select id="getPV" resultType="int">
        SELECT IFNULL(SUM(pv.count), 0)
        from pv
        where pv.`type` = 1
    </select>

    <!--    分页查询文章-->
    <select id="getArticlesByPage" resultMap="articleMap">
        SELECT *
        FROM article a
        <choose>
            <when test="status != null and status.toString == 'ALL'"/>
            <when test="status != null and (status.toString == 'DRAFT' or status.toString == 'DELETED')">
                WHERE a.status = #{status}
            </when>
            <otherwise>
                WHERE a.status = 'PUBLISHED'
            </otherwise>
        </choose>
        <include refid="sort"/>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    <!--    分页查询文章结束-->

    <!--分页获取文章ID-->
    <select id="getArticleIdByPage" resultType="Integer">
        SELECT a.id FROM (SELECT article.id
        FROM article
        <choose>
            <when test="status != null and status.toString == 'ALL'"/>
            <when test="status != null and (status.toString == 'DRAFT' or status.toString == 'DELETED')">
                WHERE article.status = #{status}
            </when>
            <otherwise>
                WHERE article.status = 'PUBLISHED'
            </otherwise>
        </choose>
        ) a
        <include refid="sort"/>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    <!--分页获取文章ID结束-->

    <!--   获取文章标签 -->
    <select id="getArticleMapLabels" parameterType="int"
            resultMap="com.hiyj.blog.mapper.ArticleLabelMapper.labelMap">
        SELECT al.*
        FROM (
                 SELECT aml.label_id
                 FROM article_map_label aml
                 WHERE aml.article_id = #{id}
             ) aml
                 LEFT JOIN article_label al ON aml.label_id = al.id
    </select>
    <!--   获取文章标签结束 -->

    <select id="getArticleMapType" resultMap="com.hiyj.blog.mapper.ArticleLabelMapper.typeMap">
        SELECT al.*
        FROM (
                 SELECT amt.type_id
                 FROM article_map_type amt
                 WHERE amt.article_id = #{id}
             ) amt
                 LEFT JOIN article_label al ON amt.type_id = al.id
    </select>

    <!--    获取分类所属文章-->
    <select id="getArticlesByType" parameterType="int" resultMap="articleMap">
        select *
        from article a
        where a.id in (
        select amt.article_id FROM article_map_type amt
        WHERE amt.type_id = #{typeId}
        )
        <choose>
            <when test="status != null and status.toString == 'ALL'"/>
            <when test="status != null and (status.toString == 'DRAFT' or status.toString == 'DELETED')">
                AND a.status = #{status}
            </when>
            <otherwise>
                AND a.status = 'PUBLISHED'
            </otherwise>
        </choose>
        <include refid="sort"/>
        limit #{limit} OFFSET #{offset}
    </select>
    <!--    获取分类所属文章结束-->

    <!--    根据文章ID查找文章-->
    <select id="findArticleId" parameterType="int" resultMap="articleMap">
        SELECT *
        FROM article a
        WHERE a.id = #{id}
    </select>
    <!--    根据文章ID查找文章结束-->

    <!--    获取标签所属文章-->
    <select id="getArticlesByLabel" parameterType="int" resultMap="articleMap">
        select *
        from article a
        where a.id in (
        select aml.article_id FROM article_map_label aml
        WHERE aml.label_id = #{labelId}
        )
        <choose>
            <when test="status != null and status.toString == 'ALL'"/>
            <when test="status != null and (status.toString == 'DRAFT' or status.toString == 'DELETED')">
                AND a.status = #{status}
            </when>
            <otherwise>
                AND a.status = 'PUBLISHED'
            </otherwise>
        </choose>
        <include refid="sort"/>
        limit #{limit} OFFSET #{offset}
    </select>
    <!--    获取标签所属文章结束-->

    <select id="getPVLogByDay" parameterType="int" resultType="map">
        SELECT DATE_FORMAT(count_list.time, '%Y-%m-%d') day_time, sum(count_list.count) total
        FROM (
                 -- 访问计数表
                 SELECT pv.time, pv.count
                 FROM (
                          SELECT article.id as target_id
                          FROM article
                      ) article_id_list

                          LEFT JOIN
                      pv on article_id_list.target_id = pv.target_id
                          AND pv.`type` = 1
                 ORDER BY pv.`time` DESC
             ) count_list
             -- 访问计数表结束
        GROUP BY day_time
        ORDER BY day_time DESC
        limit 10;
    </select>

    <select id="getArticleCreateLogByWeek" parameterType="int" resultType="map">
        SELECT CONCAT(SUBSTR(DATE_FORMAT(article_time.createTime, '%Y-%u') FROM 1 FOR 4), '第',
                      SUBSTR(DATE_FORMAT(article_time.createTime, '%Y-%u'), 6), '周') week_time,
               COUNT(*)                                                              total
        FROM (
                 SELECT a.createTime
                 FROM

                     -- 查找用户所属文章ID
                     (
                         SELECT article.id
                         FROM article
                     ) article_id_list
                         -- 查找用户所属文章ID结束

                         LEFT JOIN
                     article a on a.id = article_id_list.id
             ) article_time

        GROUP BY week_time
        ORDER BY week_time DESC
        limit 0,10
    </select>
    <!--添加文章，不含标签和文章所属用户映射-->
    <insert id="addArticle" parameterType="com.hiyj.blog.object.Article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article(title, summary, content, coverPic, status, comment_disabled, publish_type)
        VALUES (#{article.title},
                #{article.summary},
                #{article.content},
                #{article.coverPic},
                #{article.status},
                #{article.commentDisabled},
                #{article.publishType});
    </insert>
    <!--添加文章，不含标签和文章所属用户映射    >>end<<-->

    <!--    添加用户——文章映射-->
    <insert id="addUserMapArticle" parameterType="int">
        INSERT INTO user_map_article
            (user_id, article_id)
        VALUES (#{userId}, #{articleId});

    </insert>
    <!--    添加用户——文章映射   >>end<<-->

    <!-- 添加文章——标签映射   -->
    <insert id="addArticleMapLabels" parameterType="List">
        INSERT INTO article_map_label
        (article_id, label_id)
        VALUES
        <foreach collection="articleLabels" item="articleLabel" separator=",">
            (
            #{articleId}, #{articleLabel.id}
            )
        </foreach>
        ;

    </insert>
    <!-- 添加文章——标签映射   >>end<< -->

    <!--    获取访问最多的文章列表-->
    <select id="getMostVisits" parameterType="int" resultMap="articleMap">
        SELECT visits.id, visits.num as pv, a.title, a.summary, a.coverPic, a.createTime, a.updateTime
        FROM (
                 -- 访问前五的文章
                 SELECT pv.target_id as id, SUM(pv.count) as num
                 FROM pv
                 WHERE pv.`type` = 1
                 GROUP BY target_id
                 ORDER BY num DESC
                 -- 访问前五的文章
             ) visits
                 LEFT JOIN (SELECT *
                            FROM article

                            WHERE article.status = 'PUBLISHED'
        ) a ON visits.id = a.id
        limit #{limit}
    </select>
    <!--    获取访问最多的文章结束-->

    <!--    修改文章-->
    <update id="updateArticle" parameterType="com.hiyj.blog.object.Article">
        UPDATE article
        SET title=#{article.title},
            summary=#{article.summary},
            content=#{article.content},
            coverPic=#{article.coverPic},
            status=#{article.status},
            comment_disabled=#{article.commentDisabled},
            publish_type=#{article.publishType}
        WHERE id = #{article.id};
    </update>
    <!--   修改文章 -->
</mapper>